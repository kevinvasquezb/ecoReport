# ============================================================================
# ECOREPORTS BACKEND - VARIABLES DE ENTORNO
# ============================================================================
# Copia este archivo a .env y completa los valores según tu configuración
# Versión: 2.0.0
# Última actualización: 2025-01-18

# ============================================================================
# CONFIGURACIÓN DEL SERVIDOR
# ============================================================================

# Puerto del servidor (por defecto 5000)
PORT=5000

# Entorno de ejecución (development, production, test)
NODE_ENV=development

# URL base del frontend (para CORS)
FRONTEND_URL=http://localhost:3000

# URLs adicionales permitidas para CORS (separadas por comas)
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,https://ecoreports.vercel.app

# Versión de la aplicación
APP_VERSION=2.0.0

# Nombre de la aplicación
APP_NAME=EcoReports

# ============================================================================
# BASE DE DATOS POSTGRESQL
# ============================================================================

# Configuración principal de PostgreSQL
DB_HOST=localhost
DB_PORT=5432
DB_NAME=ecoreports_db
DB_USER=postgres
DB_PASSWORD=perrito12

# URL de conexión completa (alternativa a los campos individuales)
# DATABASE_URL=postgresql://postgres:perrito12@localhost:5432/ecoreports_db

# Configuración del pool de conexiones
DB_POOL_MIN=5
DB_POOL_MAX=20
DB_POOL_IDLE_TIMEOUT=30000
DB_POOL_ACQUIRE_TIMEOUT=60000

# SSL para base de datos (true/false)
DB_SSL=false

# ============================================================================
# AUTENTICACIÓN JWT
# ============================================================================

# Clave secreta para JWT (CAMBIAR EN PRODUCCIÓN)
JWT_SECRET=ecoreports_super_secret_jwt_key_2025_cambiar_en_produccion_por_una_clave_de_64_caracteres_minimo

# Tiempo de expiración del token
JWT_EXPIRES_IN=7d

# Clave secreta para refresh tokens (opcional - futuro)
JWT_REFRESH_SECRET=ecoreports_refresh_secret_2025_cambiar_en_produccion

# Tiempo de expiración del refresh token
JWT_REFRESH_EXPIRES_IN=30d

# Algoritmo de JWT
JWT_ALGORITHM=HS256

# ============================================================================
# CLOUDINARY (GESTIÓN DE IMÁGENES)
# ============================================================================

# Configuración de Cloudinary (OBLIGATORIO)
CLOUDINARY_CLOUD_NAME=drkdld0lr
CLOUDINARY_API_KEY=154269533921772
CLOUDINARY_API_SECRET=VvzwNDLiRxMHg2evgrrvgrkfeYM

# URL de Cloudinary (alternativa)
# CLOUDINARY_URL=cloudinary://154269533921772:VvzwNDLiRxMHg2evgrrvgrkfeYM@drkdld0lr

# Configuración de subida
CLOUDINARY_UPLOAD_PRESET=ecoreports_upload
CLOUDINARY_FOLDER=ecoreports

# ============================================================================
# CONFIGURACIÓN DE ARCHIVOS
# ============================================================================

# Tamaño máximo de archivo en bytes (10MB por defecto)
MAX_FILE_SIZE=10485760

# Tipos de archivo permitidos (separados por comas)
ALLOWED_FILE_TYPES=jpeg,jpg,png,webp,gif

# Directorio temporal para subidas
UPLOAD_TEMP_DIR=./temp/uploads

# ============================================================================
# RATE LIMITING
# ============================================================================

# Ventana de tiempo para rate limiting (en milisegundos)
RATE_LIMIT_WINDOW_MS=900000

# Número máximo de requests por ventana
RATE_LIMIT_MAX_REQUESTS=100

# Rate limiting para autenticación
AUTH_RATE_LIMIT_MAX=5
AUTH_RATE_LIMIT_WINDOW_MS=900000

# Rate limiting para reportes
REPORTS_RATE_LIMIT_MAX=10
REPORTS_RATE_LIMIT_WINDOW_MS=60000

# ============================================================================
# REDIS (CACHE Y RATE LIMITING - OPCIONAL)
# ============================================================================

# Configuración de Redis (opcional)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# URL de conexión Redis completa (alternativa)
# REDIS_URL=redis://localhost:6379/0

# TTL por defecto para cache (en segundos)
REDIS_DEFAULT_TTL=3600

# Habilitar Redis (true/false)
REDIS_ENABLED=false

# ============================================================================
# EMAIL (NOTIFICACIONES - OPCIONAL)
# ============================================================================

# Configuración SMTP
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=tu_email@gmail.com
SMTP_PASS=tu_app_password

# Email del remitente
EMAIL_FROM=noreply@ecoreports.com
EMAIL_FROM_NAME=EcoReports

# Habilitar envío de emails (true/false)
EMAIL_ENABLED=false

# Templates de email
EMAIL_TEMPLATE_DIR=./templates/email

# ============================================================================
# LOGGING
# ============================================================================

# Nivel de logging (error, warn, info, verbose, debug, silly)
LOG_LEVEL=info

# Directorio de logs
LOG_DIR=./logs

# Archivo de log principal
LOG_FILE=app.log

# Rotación de logs (diaria)
LOG_ROTATION=daily

# Días para mantener logs
LOG_RETENTION_DAYS=30

# Logging en consola (true/false)
LOG_CONSOLE=true

# ============================================================================
# SEGURIDAD
# ============================================================================

# Clave API (opcional - para endpoints especiales)
API_KEY=

# Habilitar HTTPS (true/false)
HTTPS_ENABLED=false

# Rutas a certificados SSL (solo si HTTPS_ENABLED=true)
SSL_CERT_PATH=
SSL_KEY_PATH=

# Timeout para requests (en milisegundos)
REQUEST_TIMEOUT=30000

# Habilitar compresión (true/false)
COMPRESSION_ENABLED=true

# ============================================================================
# INTEGRACIONES EXTERNAS
# ============================================================================

# N8N Webhook URL (para automatización - futuro)
N8N_WEBHOOK_URL=

# Telegram Bot Token (para notificaciones - futuro)
TELEGRAM_BOT_TOKEN=

# OpenAI API Key (para IA - futuro)
OPENAI_API_KEY=

# Google Maps API Key (para geocodificación - futuro)
GOOGLE_MAPS_API_KEY=

# ============================================================================
# MONITOREO Y ANALYTICS
# ============================================================================

# Sentry DSN (para tracking de errores - opcional)
SENTRY_DSN=

# Google Analytics ID (opcional)
GA_TRACKING_ID=

# Habilitar métricas de performance (true/false)
METRICS_ENABLED=true

# Endpoint para health checks
HEALTH_CHECK_ENDPOINT=/health

# ============================================================================
# CONFIGURACIÓN DE GAMIFICACIÓN
# ============================================================================

# Puntos por crear reporte
POINTS_PER_REPORT=10

# Puntos extra por incluir imagen
POINTS_PER_IMAGE=5

# Puntos por reporte resuelto
POINTS_PER_RESOLUTION=25

# Multiplicador de puntos para autoridades
AUTHORITY_POINTS_MULTIPLIER=1.5

# ============================================================================
# CONFIGURACIÓN DE DESARROLLO
# ============================================================================

# Habilitar datos de prueba (true/false)
ENABLE_TEST_DATA=true

# Habilitar rutas de desarrollo (true/false)
ENABLE_DEV_ROUTES=true

# Sembrar base de datos al iniciar (true/false)
AUTO_SEED_DB=false

# Mostrar queries SQL en consola (true/false)
DEBUG_SQL=false

# ============================================================================
# CONFIGURACIÓN DE PRODUCCIÓN
# ============================================================================

# Cluster de workers (número de procesos)
CLUSTER_WORKERS=auto

# Habilitar cluster (true/false)
CLUSTER_ENABLED=false

# Directorio de PID files
PID_FILE_DIR=./pids

# Usuario para ejecutar el proceso
RUN_AS_USER=

# Grupo para ejecutar el proceso
RUN_AS_GROUP=

# ============================================================================
# BACKUP Y MANTENIMIENTO
# ============================================================================

# Directorio para backups de BD
BACKUP_DIR=./backups

# Frecuencia de backup automático (cron expression)
BACKUP_SCHEDULE=0 2 * * *

# Días para mantener backups
BACKUP_RETENTION_DAYS=7

# Comando de backup personalizado
BACKUP_COMMAND=

# ============================================================================
# CONFIGURACIÓN DE TESTING
# ============================================================================

# Base de datos para testing
TEST_DB_NAME=ecoreports_test_db
TEST_DB_HOST=localhost
TEST_DB_PORT=5432
TEST_DB_USER=postgres
TEST_DB_PASSWORD=perrito12

# JWT secret para testing
TEST_JWT_SECRET=test_secret_key

# Cloudinary para testing (usar cuenta de test)
TEST_CLOUDINARY_CLOUD_NAME=
TEST_CLOUDINARY_API_KEY=
TEST_CLOUDINARY_API_SECRET=

# ============================================================================
# NOTAS IMPORTANTES
# ============================================================================

# 1. NUNCA commitees el archivo .env al repositorio
# 2. Cambia todas las claves secretas en producción
# 3. Usa valores seguros para las contraseñas de BD
# 4. Configura HTTPS en producción
# 5. Ajusta los rate limits según tu infraestructura
# 6. Habilita Redis para mejor performance en producción
# 7. Configura logging apropiado para producción
# 8. Considera usar variables de entorno del sistema en producción

# ============================================================================
# EJEMPLO DE CONFIGURACIÓN PARA PRODUCCIÓN
# ============================================================================

# NODE_ENV=production
# PORT=5000
# DB_HOST=your-production-db-host
# DB_NAME=ecoreports_production
# DB_USER=ecoreports_user
# DB_PASSWORD=your-super-secure-password
# JWT_SECRET=your-super-secure-64-character-secret-key-here
# CLOUDINARY_CLOUD_NAME=your-production-cloud
# REDIS_ENABLED=true
# EMAIL_ENABLED=true
# HTTPS_ENABLED=true
# LOG_LEVEL=warn
# RATE_LIMIT_MAX_REQUESTS=50

# ============================================================================
# FIN DEL ARCHIVO
# ============================================================================